prototype(M12.Foundation:Button) < prototype(M12.Foundation:Content) {
	@override.renderAnchor = ${q(node).property('renderAnchor')}
	@override.htmlHref = ${q(node).property('htmlHref') ? String.trim(q(node).property('htmlHref')) : null}
	@override.isButtonSplit = ${q(node).property('isButtonSplit')}

	attributes.class.base = ${renderAnchor ? 'button' : null}
	attributes.class.buttonOptions = ${q(node).property('classOptions') ? String.trim(Array.join(q(node).property('classOptions'), ' ')) : null}

	attributes.href = ${htmlHref}
	attributes.type = ${q(node).property('buttonType') ? q(node).property('buttonType') : null}
	attributes.target = ${q(node).property('htmlTargetBlank') ? q(node).property('htmlTargetBlank') : null}

	# Extra button options
	attributes.data-reveal-id = ${q(node).property('htmlDataRevealId') ? String.trim(q(node).property('htmlDataRevealId')) : null}
	attributes.data-dropdown = ${q(node).property('htmlDataDropdownId') and !isButtonSplit ? String.trim(q(node).property('htmlDataDropdownId')) : null}
	attributes.data-options = TYPO3.TypoScript:RawArray {
		dropdownDirection = ${q(node).property('dropdownDirection') ? 'align: ' + q(node).property('dropdownDirection') + ';' : null}
		dropdownHoverable = ${q(node).property('dropdownHoverable') ? 'is_hover: true;' : null}
		@process.stringify {
			expression = ${String.trim(String.pregReplace(Array.join(value,' '),'/\s+/',' '))}
			@position = '1'
		}
		@process.nullify {
			expression = ${value ? value : null}
			@position = 'end'
		}
	}

	tag = ${renderAnchor or htmlHref ? 'a' : 'button'}
}

prototype(M12.Foundation:ButtonGroup) < prototype(M12.Foundation:Content) {
	templatePath = 'resource://M12.Foundation/Private/Templates/NodeTypes/Button.html'
	sectionName = 'buttonGroup'
	
	attributes.class.base = 'button-group'
	
	@override.parentAttributes = ${this.attributes}

	buttons = TYPO3.TypoScript:Collection {
		collection = ${q(node).children('[instanceof M12.Foundation:Button]')}
		itemRenderer = M12.Foundation:ButtonGroupItem
		itemName = 'node'
		iterationName = 'iterator'
	}
	
	@process.wrapRemover = M12.Utils:WrapRemover
	@process.wrapRemover.wrapperClass = 'extra-wrapper-required-by-neos-backend'
}

prototype(M12.Foundation:ButtonGroupItem) < prototype(M12.Foundation:Content) {
	templatePath = 'resource://M12.Foundation/Private/Templates/NodeTypes/Button.html'
	sectionName = 'buttonGroupItem'
	
	iterator = ${iterator}
	parentAttributes = ${parentAttributes}

	button = TYPO3.Neos:ContentCase
}

# ButtonBar: group of button group(s)
prototype(M12.Foundation:ButtonBar) < prototype(M12.Foundation:Content) {
	templatePath = 'resource://M12.Foundation/Private/Templates/NodeTypes/Button.html'
	sectionName = 'buttonBar'
	
	attributes.class.base = 'button-bar'

	buttonGroups = TYPO3.TypoScript:Collection {
		collection = ${q(node).children('[instanceof M12.Foundation:ButtonGroup]')}
		itemRenderer = M12.Foundation:ButtonGroup
		itemName = 'node'
	}
}
