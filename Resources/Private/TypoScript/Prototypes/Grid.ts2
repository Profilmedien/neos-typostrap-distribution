# Abstract render definition for a grid column
prototype(M12.Foundation:Column) < prototype(M12.Foundation:Content) {
	node = ${node}

	attributes.class.classSMALL = ${q(node).property('classSMALL') ? q(node).property('classSMALL') + " columns" : null}
	attributes.class.classMEDIUM = ${q(node).property('classMEDIUM') ? q(node).property('classMEDIUM') + " columns" : null}
	attributes.class.classLARGE = ${q(node).property('classLARGE') ? q(node).property('classLARGE') + " columns" : null}

	columnContent = TYPO3.Neos:ContentCollection {
		nodePath = 'column'
	}
}

# Basic implementation of a flexible GridColumns element,
# not exposed directly but inherited by all specific M12.Foundation:GridColumns* content elements
prototype(M12.Foundation:GridColumns) >
prototype(M12.Foundation:GridColumns) < prototype(M12.Foundation:Content) {
	templatePath = 'resource://M12.Foundation/Private/Templates/NodeTypes/GridColumns.html'

	attributes.class.row = 'row'

	columns = TYPO3.TypoScript:Collection {
		collection = ${q(node).children('[instanceof M12.Foundation:Column]')}
		itemRenderer = M12.Foundation:Column
		itemName = 'node'
	}
}

prototype(M12.Foundation:GridColumns2) >
prototype(M12.Foundation:GridColumns2) < prototype(M12.Foundation:GridColumns)

prototype(M12.Foundation:GridColumns3) >
prototype(M12.Foundation:GridColumns3) < prototype(M12.Foundation:GridColumns)

prototype(M12.Foundation:GridColumns4) >
prototype(M12.Foundation:GridColumns4) < prototype(M12.Foundation:GridColumns)
