prototype(M12.Foundation:Content) < prototype(TYPO3.Neos:Content) {
	# remove default Neos class processing
	attributes.class.@process.nodeType >

	attributes.class = TYPO3.TypoScript:RawArray {
		# render class with node type (Neos default) - do we need that?
		#nodeType = ${String.trim(String.toLowerCase(String.pregReplace(q(node).property('_nodeType.name'), '/[[:^alnum:]]/', '-')))}

		@process {
			float = ${Array.push(value, q(node).property('classFloat'))}
			radiusAndRounded = ${Array.push(value, q(node).property('classRadiusAndRounded'))}
			textAlign = ${Array.push(value, q(node).property('classTextAlign'))}
			hide = ${Array.push(value, (q(node).property('classHide') ? 'hide' : null))}
			clearfix = ${Array.push(value, (q(node).property('classClearfix') ? 'clearfix' : null))}
			showByScreenSize = ${Array.push(value, q(node).property('classShowByScreenSize'))}
			hideByScreenSize = ${Array.push(value, q(node).property('classHideByScreenSize'))}
			orientationDetection = ${Array.push(value, q(node).property('classOrientationDetection'))}
			touchDetection = ${Array.push(value, q(node).property('classTouchDetection'))}
			customClass = ${Array.push(value, q(node).property('classCustomClass'))}
		}

		# At the end remove extra spaces after many class items were joined
		@process.trimThatWitch {
		 	expression = ${String.trim(String.pregReplace(Array.join(value,' '),'/\s+/',' '))}
		 	@position = 'end'
		}
	}

	attributes.id = ${String.trim(q(node).property('htmlCustomId'))}
}
