# -----------------------------------------------------------------------------
#
# Form
#
# -----------------------------------------------------------------------------

# <form> element.
'M12.Foundation:Form':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:AbstractNavSailingType'
  ui:
    label: 'Form'
    icon: 'icon-th-list'
    group: 'foundationForms'
    inlineEditable: TRUE
  childNodes:
    content:
      type: 'TYPO3.Neos:ContentCollection'


# Abstract NodeType for all form inputs (including buttons).
'M12.Foundation:FormElementAbstract':
  abstract: TRUE
  superTypes:
    - 'TYPO3.Neos:Content'
  ui:
    group: 'foundationForms'
    inspector:
      groups:
        formInputSettings:
          label: 'Form element settings'
          position: 5
        dev:
          label: 'Advanced form element settings'
          position: 9
  properties:
    inputName:
      type: string
      defaultValue: 'input-name'
      ui:
        label: 'Name attribute'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 10
          editor: 'TYPO3.Neos/Inspector/Editors/TextFieldEditor'
    inputValue:
      type: string
      defaultValue: ''
      ui:
        label: 'Value attribute'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 20
          editor: 'TYPO3.Neos/Inspector/Editors/TextFieldEditor'
    inputRequired:
      type: boolean
      ui:
        label: 'Required'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 50
    inputReadOnly:
      type: boolean
      ui:
        label: 'Read only'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 60
    inputDisabled:
      type: boolean
      ui:
        label: 'Disabled'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 70
    errorTxt:
      type: string
      defaultValue: 'Invalid entry'
      ui:
        inlineEditable: TRUE
        aloha:
          'format': []
    errorState:
      type: boolean
      ui:
        label: 'Mark as an error state'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 80
    # Override inherited properties from M12.Foundation:AbstractDevBase
    customHtmlId:
      ui:
        label: 'Element custom ID'
    customCssClass:
      ui:
        label: 'Element extra CSS class(es)'
    customCssCode:
      ui:
        label: 'Element inline CSS'
    customLook:
      ui:
        label: 'Element predefined style / look'


# Abstract for all form elements that need <label> element.
'M12.Foundation:FormInputLabelAbstract':
  abstract: TRUE
  ui:
    inspector:
      groups:
        formLabelSettings:
          label: 'Form label settings'
          position: 6
  properties:
    inputLabelEnable:
      type: boolean
      defaultValue: TRUE
      ui:
        label: 'Enable input label'
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          position: 10
    inputLabel:
      type: string
      defaultValue: 'Label'
      ui:
        inlineEditable: TRUE
        aloha:
          'format': []
    labelCssClass:
      type: string
      defaultValue: ''
      ui:
        label: 'Label custom class(es)'
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          position: 20
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
      validation:
        regularExpression:
          regularExpression: '/^[a-z0-9\- ]+$/i'
    labelCssCode:
      type: string
      defaultValue: ''
      ui:
        label: 'Label inline CSS'
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          position: 30
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'


# Abstract for all form elements that need placeholder property.
'M12.Foundation:FormInputPlaceholderAbstract':
  abstract: TRUE
  properties:
    inputPlaceholder:
      type: string
      defaultValue: ''
      ui:
        label: 'Placeholder'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 25
          editor: 'TYPO3.Neos/Inspector/Editors/TextFieldEditor'
          editorOptions:
            placeholder: 'Input placeholder'


# Abstract for form elements that need "checked" property.
'M12.Foundation:FormInputCheckedAbstract':
  abstract: TRUE
  properties:
    inputChecked:
      type: boolean
      ui:
        label: 'Checked state'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'


# Fieldset.
'M12.Foundation:FormFieldset':
  superTypes:
    - 'TYPO3.Neos:Content'
  ui:
    label: 'Fieldset'
    icon: 'icon-columns'
    group: 'foundationForms'
    inspector:
      groups:
        formInputSettings:
          label: 'Form input settings'
          position: 9
  childNodes:
    content:
      type: 'TYPO3.Neos:ContentCollection'
  properties:
    legendTxt:
      type: string
      defaultValue: 'Legend'
      ui:
        inlineEditable: TRUE
        aloha:
          'format': []
    showLegend:
      type: boolean
      defaultValue: TRUE
      ui:
        label: 'Show legend'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'


# <label> element.
'M12.Foundation:FormLabel':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:FormInputLabelAbstract'
  ui:
    label: 'Label'
    icon: 'icon-paperclip'
    group: 'foundationForms'
    inspector:
      groups:
        dev:
          label: 'Advanced label settings'
          position: 9
  properties:
    htmlFor:
      type: string
      defaultValue: ''
      ui:
        label: 'For attribute'
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          editorOptions:
            placeholder: 'Type in an ID of relevant input field.'
    labelInlined:
      type: boolean
      ui:
        label: 'Inline (vertical centering)'
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
    # Hide inherited 'inputLabelEnable' property as it's not relevant here
    inputLabelEnable:
      ui:
        inspector:
          group: 'na'
    # Hide custom css class / inline code - this is main LABEL element, therefore
    # properties available in TYPO3.Neos:Content (inherited from M12.Foundation:AbstractDevBase)
    # should be used.
    labelCssClass:
      ui:
        inspector:
          group: 'na'
    labelCssCode:
      ui:
        inspector:
          group: 'na'
    # Override labels in inherited properties from M12.Foundation:AbstractDevBase
    customHtmlId:
      ui:
        label: 'Label custom ID'
    customCssClass:
      ui:
        label: 'Label extra CSS class(es)'
    customCssCode:
      ui:
        label: 'Label inline CSS'
    customLook:
      ui:
        label: 'Label predefined style / look'


# NodeType for text based <input> fields, e.g. text, password, email, number etc.
'M12.Foundation:FormInput':
  superTypes:
    - 'M12.Foundation:FormElementAbstract'
    - 'M12.Foundation:FormInputLabelAbstract'
    - 'M12.Foundation:FormInputPlaceholderAbstract'
  ui:
    label: 'Form Input'
    icon: 'icon-pencil'
  properties:
    inputType:
      type: string
      defaultValue: 'text'
      ui:
        label: 'Choose input type'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 5
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            values:
              text:
                label: 'Text'
              number:
                label: 'Number'
              password:
                label: 'Password'
              email:
                label: 'Email'
              tel:
                label: 'Telephone'
              url:
                label: 'Url'
              search:
                label: 'Search'
              range:
                label: 'Range'
              date:
                label: 'Date'
              time:
                label: 'Time'
              color:
                label: 'Color'


# Pre/postfix element.
'M12.Foundation:FormInputFix':
  superTypes:
    - 'TYPO3.Neos:Content'
  ui:
    label: 'Input Pre/Postfix'
    icon: 'icon-check-empty'
    group: 'foundationForms'
    inspector:
      groups:
        formInputSettings:
          label: 'Form input settings'
          position: 9
  properties:
    text:
      type: string
      defaultValue: 'Pre/postfix'
      ui:
        inlineEditable: TRUE
        aloha:
          'format': []
    fixType:
      type: string
      defaultValue: 'prefix'
      ui:
        label: 'Choose fix type'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            values:
              prefix:
                label: 'Prefix'
              postfix:
                label: 'Postfix'
    isButton:
      type: boolean
      ui:
        label: 'Make it a button'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'


# NodeType for checkbox input.
'M12.Foundation:FormInputCheckbox':
  superTypes:
    - 'M12.Foundation:FormElementAbstract'
    - 'M12.Foundation:FormInputLabelAbstract'
    - 'M12.Foundation:FormInputCheckedAbstract'
  ui:
    label: 'Checkbox input'
    icon: 'icon-check'


# NodeType for radio input.
'M12.Foundation:FormInputRadio':
  superTypes:
    - 'M12.Foundation:FormElementAbstract'
    - 'M12.Foundation:FormInputLabelAbstract'
    - 'M12.Foundation:FormInputCheckedAbstract'
  ui:
    label: 'Radio input'
    icon: 'icon-circle-blank'


# NodeType for select.
'M12.Foundation:FormInputSelect':
  superTypes:
    - 'M12.Foundation:FormElementAbstract'
    - 'M12.Foundation:FormInputLabelAbstract'
  ui:
    label: 'Select input'
    icon: 'icon-chevron-down'
  properties:
    selectOptions:
      type: string
      ui:
        label: 'List select options'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          editor: 'M12.Foundation/Inspector/Editors/TextAreaEditor'


# NodeType for textarea.
'M12.Foundation:FormInputTextarea':
  superTypes:
    - 'M12.Foundation:FormElementAbstract'
    - 'M12.Foundation:FormInputLabelAbstract'
  ui:
    label: 'Textarea'
    icon: 'icon-align-left'

