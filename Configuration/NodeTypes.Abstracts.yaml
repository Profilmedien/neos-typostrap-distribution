#
# Mixin with custom id / css class / inline css
#
'M12.Foundation:AbstractDevBase':
  abstract: TRUE
  ui:
    inspector:
      groups:
        dev:
          label: 'Advanced'
          position: 95
  properties:
    customHtmlId:
      type: string
      defaultValue: ''
      ui:
        label: 'Wrapper custom HTML ID'
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 10
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
      validation:
        regularExpression:
          regularExpression: '/^[a-z0-9\-]+$/i'
    customCssClass:
      type: string
      defaultValue: ''
      ui:
        label: 'Wrapper custom class(es)'
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 20
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
      validation:
        regularExpression:
          regularExpression: '/^[a-z0-9\- ]+$/i'
    customCssCode:
      type: string
      defaultValue: ''
      ui:
        label: 'Wrapper inline CSS'
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 30
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
    customUserAttributes:
      type: string
      ui:
        label: 'Custom attributes (one per line)'
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 40
          editor: 'Content/Inspector/Editors/TextAreaEditor'
          editorOptions:
            placeholder: 'e.g. custom-data-attribute=value'


'M12.Foundation:AbstractDevCustomLook':
  abstract: TRUE
  ui:
    inspector:
      groups:
        dev:
          label: 'Advanced'
          position: 95
  properties:
    customLook:
      type: string
      defaultValue: ''
      ui:
        label: 'Predefined style / look'
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 40
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'None'
            values:
              '':
                label: ''
              style-1:
                label: 'Style 1'
              style-2:
                label: 'Style 2'
              style-3:
                label: 'Style 3'

#
# Mixin:
# Semantic markup, choosing tag name for wrapper element
#
'M12.Foundation:AbstractDevCustomTag':
  abstract: TRUE
  ui:
    inspector:
      groups:
        dev:
          label: 'Advanced'
          position: 95
  properties:
    customTagName:
      type: string
      defaultValue: 'div'
      ui:
        label: 'Wrapper semantic tag type'
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 50
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'Default / None'
            values:
              '':
                label: ''
              main:
                label: 'MAIN'
              header:
                label: 'HEADER'
              nav:
                label: 'NAV'
              section:
                label: 'SECTION'
              artile:
                label: 'ARTICLE'
              aside:
                label: 'ASIDE'
              footer:
                label: 'FOOTER'

#
# Mixin for content nodes where 'magellanSupport' property is needed
#
'M12.Foundation:AbstractNavMagellanSupport':
  abstract: TRUE
  properties:
    magellanSupport:
      type: boolean
      ui:
        label: 'Magellan Sticky Nav support'
        reloadIfChanged: TRUE
        inspector:
          group: 'sailingOptions'

#
# Mixin for document/content nodes with 'fragmentId' property
# which can be rendered as #fragmentId (document links)
# or anchor <a name"fragmentId"></a>
#
'M12.Foundation:AbstractNavFragmentId':
  abstract: TRUE
  properties:
    fragmentId:
      type: string
      defaultValue: ''
      ui:
        label: 'Fragment / section #name'
        reloadIfChanged: TRUE
        inspector:
          group: 'sailingOptions'
          position: 10
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
      validation:
        'TYPO3.Neos/Validation/StringLengthValidator':
          minimum: 1
          maximum: 32
        regularExpression:
          regularExpression: '/^[a-z0-9\-]+$/i'

#
# Mixin for nav content elements, to add support for fixed/sticky
#
'M12.Foundation:AbstractNavFixedSticky':
  abstract: TRUE
  properties:
    classNavFixed:
      type: boolean
      ui:
        label: 'Fixed'
        reloadIfChanged: TRUE
        inspector:
          group: 'options'
    classNavSticky:
      type: boolean
      ui:
        label: 'Sticky'
        reloadIfChanged: TRUE
        inspector:
          group: 'options'

#
# Mixin:
# Navigation: #fragment, magellan support
#
'M12.Foundation:AbstractNavSailingType':
  superTypes:
    - 'M12.Foundation:AbstractNavFragmentId'
    - 'M12.Foundation:AbstractNavMagellanSupport'
  abstract: TRUE
  ui:
    inspector:
      groups:
        sailingOptions:
          label: 'Sailing options'
          position: 96


#
# Mixin: Font Awesome icon
#
'M12.Foundation:AbstractFontIcon':
  abstract: TRUE
  ui:
    inspector:
      groups:
        fontIconOptions:
          label: 'Font Awesome icon'
          # Put this group somewhere in the middle...
          position: 96
  properties:
    faName:
      type: string
      ui:
        label: 'Icon name (without fa- prefix)'
        reloadIfChanged: TRUE
        inspector:
          group: 'fontIconOptions'
          editorOptions:
            placeholder: '...as listed on fontawesome.io'
    faSize:
      type: string
      ui:
        reloadIfChanged: TRUE
        inspector:
          group: 'fontIconOptions'
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'Icon size'
            values:
              '':
                label: ''
              fa-lg:
                label: 'Size: large'
              fa-2x:
                label: 'Size: x2'
              fa-3x:
                label: 'Size: x3'
              fa-4x:
                label: 'Size: x4'
              fa-5x:
                label: 'Size: x5'
    faRotation:
      type: string
      ui:
        reloadIfChanged: TRUE
        inspector:
          group: 'fontIconOptions'
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'Icon rotation'
            values:
              '':
                label: ''
              fa-rotate-90:
                label: 'Rotate 90 degree'
              fa-rotate-180:
                label: 'Rotate 180 degree'
              fa-rotate-270:
                label: 'Rotate 270 degree'
              fa-flip-horizontal:
                label: 'Flip horizontal'
              fa-flip-vertical:
                label: 'Flip vertical'
    faCustomCss:
      type: string
      ui:
        label: 'Font Awesome icon custom css'
        reloadIfChanged: TRUE
        inspector:
          group: 'fontIconOptions'
          editorOptions:
            placeholder: 'e.g. padding-right: 5px;'
    faSpin:
      type: boolean
      ui:
        label: 'Make it a spinner'
        reloadIfChanged: TRUE
        inspector:
          group: 'fontIconOptions'
    faFixedWidth:
      type: boolean
      ui:
        label: 'Make it have a fixed with'
        reloadIfChanged: TRUE
        inspector:
          group: 'fontIconOptions'
    faRightAlign:
      type: boolean
      ui:
        label: 'Make it right aligned'
        reloadIfChanged: TRUE
        inspector:
          group: 'fontIconOptions'
